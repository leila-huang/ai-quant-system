server {
    listen 80;
    server_name localhost;
    
    # 安全头设置
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # 性能优化
    client_max_body_size 100M;
    client_body_buffer_size 16K;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 16k;
    
    # 静态文件缓存配置
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        root /usr/share/nginx/html;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Pragma public;
        add_header Vary Accept-Encoding;
        access_log off;
        
        # Gzip压缩
        gzip_static on;
    }
    
    # HTML文件缓存配置（较短缓存时间）
    location ~* \.(html|htm)$ {
        root /usr/share/nginx/html;
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        add_header Pragma public;
        add_header Vary Accept-Encoding;
    }
    
    # 前端路由 - SPA支持
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
        
        # 对于主页面，设置较短的缓存时间
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
    }
    
    # API代理到后端 - 优化版本
    location /api/ {
        # 代理配置
        proxy_pass http://app:8000;
        proxy_http_version 1.1;
        
        # 头部设置
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        
        # 缓冲配置
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        
        # 超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 错误处理
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    }
    
    # WebSocket支持 - 优化版本
    location /ws {
        proxy_pass http://app:8000;
        proxy_http_version 1.1;
        
        # WebSocket必需头部
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket特定配置
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400; # 24小时
        proxy_send_timeout 86400;
        proxy_connect_timeout 60s;
        
        # 禁用缓冲以提高实时性
        proxy_buffering off;
    }
    
    # 健康检查端点
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Favicon处理
    location = /favicon.ico {
        root /usr/share/nginx/html;
        log_not_found off;
        access_log off;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # 禁止访问隐藏文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 错误页面
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    # Gzip压缩配置
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/atom+xml
        application/json
        image/svg+xml
        application/font-woff
        application/font-woff2
        font/woff
        font/woff2;
    
    # 性能日志
    access_log /var/log/nginx/access.log combined buffer=16k flush=2m;
    error_log /var/log/nginx/error.log warn;
}
